Graph Theory -*- mode: org -*-

_graph_ - consists of vertices and edges

:img:
[[./eulergraph.png]]
:end:
* Euler Paths
_euler paths_ - uses each edge once

If G has an euler path, then
 - all vertices must have even degree except for start and end
 - start and end are either both odd or even
 :proof:
 If two points are odd and rest are even, delete 1 path which connects
 the two vertices.  Then all paths are even and you can find an euler circuit.
 Now use the deleted path to connect the odd vertices. 
 :END:

_euler circuit_ - uses each edge once and returns to start

If G has an euler circuit, then
 - it must be connected
 - deg of every vertex is even

If G has an even degree, then
 - it can be seen as a union of circuits
 :HierHolzer:
 Start following circuit I until you reach circuit II
 Continue on circuit II until you reach III
 ...
 Continue on circuit m until you reach n
 Finish m
 Finish n
 ...
 Finish II
 Finish I
 :END:
 
_euler circuit_ â‡” G has even degree

_fluery algorithm_


* Platonic Solids
_platonic solids_
  - regular polygon faces
  - faces and edges all have same angles
  - same number of faces and edges meet at every vertex

_semiplatonic solids_
  - relax one of the rules for platonic solids

* Bipartite Graphs
_bipartite_ - elements can be grouped into two non touching groups
:img:
[[./bipartite.png]]
:end:
