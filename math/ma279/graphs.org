Graph Theory -*- mode: org -*-

*graph* - consists of vertices and edges

:img:
[[./eulergraph.png]]
:end:
* Euler Paths
*euler paths* - uses each edge once

If G has an euler path, then
 - all vertices must have even degree except for start and end
 - start and end are either both odd or even
 :proof:
 If two points are odd and rest are even, delete 1 path which connects
 the two vertices.  Then all paths are even and you can find an euler circuit.
 Now use the deleted path to connect the odd vertices. 
 :END:

*euler circuit* - uses each edge once and returns to start

If G has an euler circuit, then
 - it must be connected
 - deg of every vertex is even

If G has an even degree, then
 - it can be seen as a union of circuits
 :HierHolzer:
 Start following circuit I until you reach circuit II
 Continue on circuit II until you reach III
 ...
 Continue on circuit m until you reach n
 Finish m
 Finish n
 ...
 Finish II
 Finish I
 :END:
 
*euler circuit* â‡” G has even degree

*fluery algorithm*


* Platonic Solids
_platonic solids_
  - regular polygon faces
  - faces and edges all have same angles
  - same number of faces and edges meet at every vertex

_semiplatonic solids_
  - relax one of the rules for platonic solids

* Bipartite Graphs
*bipartite* - elements can be grouped into two non touching groups
:img:
[[./bipartite.png]]
:end:
* Traveling Salesman
Given some locatoins, find a pth through them that is minimal.
By giving each location a weight, we can give minimal a concrete meaning.

2 Simplifications
  - $\sum w(e) = 1$
  - There are edges between all vertices
 
* Hamilton Graphs
*hamilton circuit* - a path that visits every vertex exactly once
*hamilton graph* - a graph with a hamilton circuit

|Let n be the number of vertices
|If $\text{deg}(a) + \text{deg}(b) \geq n$ for all vertices a,b
|then the graph is hamiltonian

* P vs NP
*P* - any problem with \[a_nn^{b_n} + a_{n-1}n^{b_{n-1}} + ... + a_0\] steps is class P
*NP hard* - finding an algorithm for these problems proves P = NP
